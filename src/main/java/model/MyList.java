package model;

/**
 * Интерфейс для коллекции, представляющей список элементов.
 *
 * @param <T> тип элементов, хранимых в списке.
 */
public interface MyList<T> extends Iterable<T> {

    /**
     * Возвращает текущий размер списка.
     *
     * @return текущий размер списка.
     */
    int size();

    /**
     * Добавляет элемент в конец списка.
     *
     * @param element добавляемый элемент.
     */
    void add(T element);

    /**
     * Добавляет элемент в указанную позицию списка.
     *
     * @param index   позиция, в которую нужно добавить элемент.
     * @param element добавляемый элемент.
     * @throws IndexOutOfBoundsException если указанная позиция выходит за пределы списка.
     */
    void add(int index, T element);

    /**
     * Возвращает элемент по указанной позиции в списке.
     *
     * @param index позиция элемента в списке.
     * @return элемент по указанной позиции.
     * @throws IndexOutOfBoundsException если указанная позиция выходит за пределы списка.
     */
    T get(int index);

    /**
     * Удаляет элемент из списка по указанному индексу.
     *
     * @param index индекс удаляемого элемента.
     * @throws IndexOutOfBoundsException если указанный индекс выходит за пределы списка или ссылается на пустую ячейку.
     */
    void remove(int index);

    /**
     * Очищает список, удаляя все элементы из него.
     */
    void clear();
}
